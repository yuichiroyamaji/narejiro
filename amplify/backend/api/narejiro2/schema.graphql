input CreateNarejiroDevTableInput {
	PK: String!
	SK: Int
	cat1: Int
	cat2: Int
	cat3: Int
	title: String
	content: String
	catType: Int
	catName: String
	parentCatId: Int
	userName: String
	password: String
	email: String
	createdBy: Int
}

input DeleteNarejiroDevTableInput {
	PK: String!
	SK: Int!
}

input ModelSizeInput {
	ne: Int
	eq: Int
	le: Int
	lt: Int
	ge: Int
	gt: Int
	between: [Int]
}

type NarejiroDevTable {
	PK: String!
	SK: Int!
	scanIndex: String
	lastId: Int
	cat1: String
	cat2: String
	cat3: String
	title: String
	content: String
	viewCnt: Int
	catType: Int
	catName: String
	parentCatId: Int
	searchCnt: Int
	userName: String
	password: String
	email: String
	postCnt: Int
	reviseCnt: Int
	totalCnt: Int
	createdAt: String
	createdBy: String
	updatedAt: String
	updatedBy: String
}

type NarejiroDevTableConnection {
	items: [NarejiroDevTable]
	nextToken: String
}

input TableBooleanFilterInput {
	ne: Boolean
	eq: Boolean
	attributeExists: Boolean
}

input TableFloatFilterInput {
	ne: Float
	eq: Float
	le: Float
	lt: Float
	ge: Float
	gt: Float
	between: [Float]
	attributeExists: Boolean
}

input TableIDFilterInput {
	ne: ID
	eq: ID
	le: ID
	lt: ID
	ge: ID
	gt: ID
	contains: ID
	notContains: ID
	between: [ID]
	beginsWith: ID
	attributeExists: Boolean
	size: ModelSizeInput
}

input TableIntFilterInput {
	ne: Int
	eq: Int
	le: Int
	lt: Int
	ge: Int
	gt: Int
	between: [Int]
	attributeExists: Boolean
}

input TableNarejiroDevTableFilterInput {
	PK: TableStringFilterInput
	SK: TableStringFilterInput
	scanIndex: TableStringFilterInput
	lastId: TableStringFilterInput
	cat1: TableStringFilterInput
	cat2: TableStringFilterInput
	cat3: TableStringFilterInput
	title: TableStringFilterInput
	content: TableStringFilterInput
	viewCnt: TableStringFilterInput
	catType: TableStringFilterInput
	catName: TableStringFilterInput
	parentCatId: TableStringFilterInput
	searchCnt: TableStringFilterInput
	userName: TableStringFilterInput
	password: TableStringFilterInput
	email: TableStringFilterInput
	postCnt: TableStringFilterInput
	reviseCnt: TableStringFilterInput
	totalCnt: TableStringFilterInput
	createdAt: TableStringFilterInput
	createdBy: TableStringFilterInput
	updatedAt: TableStringFilterInput
	updatedBy: TableStringFilterInput
}

input TableStringFilterInput {
	ne: String
	eq: String
	le: String
	lt: String
	ge: String
	gt: String
	contains: String
	notContains: String
	between: [String]
	beginsWith: String
	attributeExists: Boolean
	size: ModelSizeInput
}

input UpdateNarejiroDevTableInput {
	PK: String!
	SK: Int!
	cat1: Int
	cat2: Int
	cat3: Int
	title: String
	content: String
	catType: Int
	catName: String
	parentCatId: Int
	userName: String
	password: String
	email: String
	createdBy: Int
}

type Mutation {
	createNarejiroDevTable(input: CreateNarejiroDevTableInput!): NarejiroDevTable
	updateNarejiroDevTable(input: UpdateNarejiroDevTableInput!): NarejiroDevTable
	deleteNarejiroDevTable(input: DeleteNarejiroDevTableInput!): NarejiroDevTable
}

type Query {
	getNarejiroDevTable(PK: String!, SK: Int!): NarejiroDevTable
	listNarejiroDevTables(filter: TableNarejiroDevTableFilterInput, limit: Int, nextToken: String): NarejiroDevTableConnection
}

type Subscription {
	onCreateNarejiroDevTable(
		PK: String,
		SK: Int,
		cat1: Int,
		cat2: Int,
		cat3: Int
	): NarejiroDevTable
		@aws_subscribe(mutations: ["createNarejiroDevTable"])
	onUpdateNarejiroDevTable(
		PK: String,
		SK: Int,
		cat1: Int,
		cat2: Int,
		cat3: Int
	): NarejiroDevTable
		@aws_subscribe(mutations: ["updateNarejiroDevTable"])
	onDeleteNarejiroDevTable(
		PK: String,
		SK: Int,
		cat1: Int,
		cat2: Int,
		cat3: Int
	): NarejiroDevTable
		@aws_subscribe(mutations: ["deleteNarejiroDevTable"])
}